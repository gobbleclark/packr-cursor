"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chat/page",{

/***/ "(app-pages-browser)/./src/lib/trackstar-order-service.ts":
/*!********************************************!*\
  !*** ./src/lib/trackstar-order-service.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackstarOrderService: function() { return /* binding */ trackstarOrderService; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/../../node_modules/process/browser.js\");\n/**\n * Trackstar Order Service - Handles all order modifications through Trackstar API\n */ const API_BASE = process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:4000\";\nclass TrackstarOrderService {\n    getAuthHeaders() {\n        const token =  true ? localStorage.getItem(\"token\") : 0;\n        if (!token) {\n            throw new Error(\"No authentication token found\");\n        }\n        return {\n            \"Authorization\": \"Bearer \".concat(token),\n            \"Content-Type\": \"application/json\"\n        };\n    }\n    async makeRequest(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const maxRetries = 3;\n        let lastError = null;\n        for(let attempt = 1; attempt <= maxRetries; attempt++){\n            try {\n                const response = await fetch(\"\".concat(API_BASE).concat(endpoint), {\n                    ...options,\n                    headers: {\n                        ...this.getAuthHeaders(),\n                        ...options.headers\n                    }\n                });\n                const data = await response.json();\n                if (!response.ok) {\n                    throw new Error(data.message || \"HTTP \".concat(response.status, \": \").concat(response.statusText));\n                }\n                return {\n                    success: true,\n                    data: data.data || data,\n                    message: data.message\n                };\n            } catch (error) {\n                lastError = error;\n                console.warn(\"Attempt \".concat(attempt, \"/\").concat(maxRetries, \" failed:\"), error);\n                if (attempt < maxRetries) {\n                    // Exponential backoff: 1s, 2s, 4s\n                    const delay = Math.pow(2, attempt - 1) * 1000;\n                    await new Promise((resolve)=>setTimeout(resolve, delay));\n                }\n            }\n        }\n        return {\n            success: false,\n            error: (lastError === null || lastError === void 0 ? void 0 : lastError.message) || \"Unknown error occurred\"\n        };\n    }\n    /**\n   * Get full order details\n   */ async getOrderDetails(orderNumber) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber));\n    }\n    /**\n   * Update shipping address\n   */ async updateAddress(orderNumber, address) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/address\"), {\n            method: \"POST\",\n            body: JSON.stringify(address)\n        });\n    }\n    /**\n   * Update line items\n   */ async updateLineItems(orderNumber, items) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/items\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n                items\n            })\n        });\n    }\n    /**\n   * Update carrier and shipping method\n   */ async updateCarrier(orderNumber, carrier) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/carrier\"), {\n            method: \"POST\",\n            body: JSON.stringify(carrier)\n        });\n    }\n    /**\n   * Get tracking information\n   */ async getTrackingInfo(orderNumber) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/tracking\"));\n    }\n    /**\n   * Get available carriers for an order\n   */ async getAvailableCarriers(orderNumber) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/carriers\"));\n    }\n    /**\n   * Add order note\n   */ async addOrderNote(orderNumber, content) {\n        let isInternal = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/notes\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n                content,\n                isInternal\n            })\n        });\n    }\n    /**\n   * Cancel order\n   */ async cancelOrder(orderNumber, reason) {\n        return this.makeRequest(\"/api/trackstar/orders/\".concat(orderNumber, \"/cancel\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n                reason\n            })\n        });\n    }\n}\nconst trackstarOrderService = new TrackstarOrderService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/trackstar-order-service.ts\n"));

/***/ })

});