The 3PL signs up for Packr.
The 3PL Creates a brand and either creates brand users for the brand or sends the invite links for them to sign up.
The 3PL adds a ship hero integration for that brand. The Ship Hero integration takes the brands email and password they use to login to ship hero as the credentials for the integration.
Once a new integration is set up we do a last 7 days back pull on all orders and shipments. This can take awhile and could possibly be a larger pull depending on the size of the brand. Will be importnat that we use pagination because ship hero only shows 100 records at a time and we need to fetch all the pages. Also important that we monitor the credits allowed in the API so we can pause the fetch until more credits are available. Ideally after this back pull is done that brand data is populated with all the orders fulfilled and pending orders on the account for that brand.
Once a new integration is set up we fetch new orders every 5 minutes and look back to the timestamp of that last successful fetch we did. Its possible that fetched can fail so important we are looking every 5 minutes and date the fetch by the last successful pull.
Subscribe to the Allocation and Deallocation webhooks so we can keep a timestamp of when the order has allocated inventory (https://developer.shiphero.com/webhooks#order-allocated-webhook ). This is important because our late shipment logic is built around not just the order created date, rather the data and time that the order was able to ship. Example: if an order came in on 03/01/2025 but the warehouse did not have inventory for it the create date would be 03/01/2025 but the allocation date could be 04/01/2025 when that inventory arrived at the warehouse and got allocated to the order. Then the timeclock would start to see if its a late shipment or not based on same day fulfillment cut off time and days of the week that the 3PL is open.
We subscribe to the shipments webhook. This webhook will fire for every shipment that the 3PL ships and give us critical data on tracking info and carrier. And also gives us the chance to update the fulfillment status to fulfilled.
We will want to make sure we pull in the order history for each order (https://developer.shiphero.com/examples-query/#browseorderhistory )
We will want to make sure we pull in all products and make sure we sync any new products that get created or updated (https://developer.shiphero.com/examples-query/#products )
Give the brand the ability to create and edit purchase orders (https://developer.shiphero.com/examples-mutation/#mutationpo ). This is the brand letting the 3PL know what incoming inventory they have that will arrive to the warehouse for receiving.
Subscribe the brand to the PO Update webhooks so we can update the status of that PO and the changes made to it (http://developer.shiphero.com/webhooks#po-update-webhook )
Subscribe to the order_canceled webhook to make sure we can update an order to canceled if that occurs in ship hero.
Have a background job that keeps data true to ship hero on order details, shipments, products, and inventory. For orders and shipments we only need to look at orders in status unfuflilled. So this should keep the query down. I think it would be good to have a backgorund job that runs each hour and only looks for all orders in status unfulilled. For small brands that would only be fetching like 10-100 orders to look at. For larger brands it could be a few thousand. Open to ideas and suggestions on how we should build this background job that cleans anything up we missed on a failed webhook or order import.